name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  
  build:
    name: gradle build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        build-root-directory: ./backend/
        
  Sonarcheck:
    name: sonar Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
    - name: sonarStuff
      working-directory: ./backend/
      env: 
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./gradlew sonarqube --info -Dsonar.projectKey=uk223
        
  Docker-build:
    name: Docker build
    runs-on: ubunut-latest
    needs: build
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: checkout repo
      uses: actions/checkout@v3
    
    - name: Build the backend Docker image
      working-directory: ./backend/
      run: docker build . --file Dockerfile --tag mikkak/backend:latest
    
    - name: Build the frontent Docker image
      working-directory: ./frontend/
      run: docker build . --file Dockerfile --tag mikkak/frontend:latest
    
    - name: Push backend
      run: docker push mikkak/backend:latest
    
    - name: Push frontend
      run: docker push mikkak/frontend:latest

  deploy:
    name: deploy to server
    runs-on: ubunut-latest
    needs: Docker-build
    steps:
    - name: deploy on server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        script: |
          docker-compose down
          docker rmi mikkak/frontend --force
          docker rmi mikkak/backend --force
          docker pull mikkak/frontend:latest
          docker pull mikkak/backend:latest
          docker-compose up -d
          
  postman-tests:

    name: run postman against new deployment
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "20292233-af42779a-2de1-4f9a-ab5a-d5828f69907b" -e "20292233-51f685e1-3e70-4922-ae03-2dc794bac023"
          
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: workdir
        working-directory: ./frontend/
        run: echo "changed workdir"
      - name: Cypress run
        uses: cypress-io/github-action@v1
        with:
          path: ./frontend/
          build: yarn run build
          start: yarn start
          wait-on: http://213.167.227.84:8006
